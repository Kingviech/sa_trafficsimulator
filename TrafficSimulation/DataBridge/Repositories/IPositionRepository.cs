///////////////////////////////////////////////////////////
//  IPositionRepository.cs
//  Implementation of the Interface IPositionRepository
//  Generated by Enterprise Architect
//  Created on:      15-Apr-2017 16:36:48
//  Original author: David
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Datamodel;
namespace Repositories {
    /// <summary>
    /// IPositionRepository
    /// </summary>
	public interface IPositionRepository      {

		/// <summary>
        /// Create new position.
        /// </summary>
        /// <param name="position">Position to create</param>
        /// <returns>Created position</returns>
		Datamodel.Position Create(Position position);

		/// <summary>
        /// Deletes given position.
        /// </summary>
        /// <param name="position">Position to delete</param>
		void Delete(Position position);

		/// <summary>
        /// Get position by id.
        /// </summary>
        /// <param name="positionId">Id of position</param>
        /// <returns>Position or null</returns>
		Datamodel.Position GetPosition(int positionId);

        /// <summary>
        /// Get predeccessors of position.
        /// </summary>
        /// <param name="numSteps">Number of steps</param>
        /// <param name="startPositionId">Id of queried position</param>
        /// <returns>List of Positions or null</returns>
        IEnumerable<Position> GetPredeccessors(int numSteps, int startPositionId);

        /// <summary>
        /// Get successors of position.
        /// </summary>
        /// <param name="numSteps">Number of steps</param>
        /// <param name="startPositionId">Id of queried position</param>
        /// <returns>List of Positions or null</returns>
        IEnumerable<Position> GetSuccessors(int numSteps, int startPositionId);

        /// <summary>
        /// Get start positions.
        /// </summary>
        /// <returns>List of positions or null</returns>
        IEnumerable<Position> GetStartPositions();

        /// <summary>
        /// Get end positions.
        /// </summary>
        /// <returns>List of positions or null</returns>
        IEnumerable<Position> GetEndPositions();

        /// <summary>
        /// Get all positions.
        /// </summary>
        /// <returns>List of positions or null</returns>
        IEnumerable<Position> GetAll();

        /// <summary>
        /// Updates given position.
        /// </summary>
        /// <param name="position">Position to update</param>
        /// <returns>Updated position</returns>
        Datamodel.Position Update(Position position);
	}//end IPositionRepository

}//end namespace Repositories