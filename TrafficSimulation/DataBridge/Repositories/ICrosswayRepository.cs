///////////////////////////////////////////////////////////
//  ICrosswayRepository.cs
//  Implementation of the Interface ICrosswayRepository
//  Generated by Enterprise Architect
//  Created on:      18-Apr-2017 20:10:14
//  Original author: David
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Datamodel;

namespace Repositories
{
    /// <summary>
    /// ICrosswayRepository.
    /// </summary>
    public interface ICrosswayRepository
    {
        /// <summary>
        /// Creates new crossway.
        /// </summary>
        /// <param name="crossway">Crossway to create</param>
        /// <returns>Created crossway</returns>
        Datamodel.Crossway Create(Crossway crossway);

        /// <summary>
        /// Deletes given crossway.
        /// </summary>
        /// <param name="crossway">Crossway to delete</param>
        void Delete(Crossway crossway);

        /// <summary>
        /// Get crossway by id.
        /// </summary>
        /// <param name="crosswayId">Id of crossway</param>
        /// <returns>Crossway or null</returns>
        Crossway GetCrossway(int crosswayId);

        /// <summary>
        /// Updates given crossway.
        /// </summary>
        /// <param name="crossway">Crossway to update</param>
        /// <returns>Updated crossway</returns>
        Crossway Update(Crossway crossway);

        /// <summary>
        /// Get all crossways.
        /// </summary>
        /// <returns>List of crossway or null</returns>
        IEnumerable<Crossway> GetAll();
    }
}

